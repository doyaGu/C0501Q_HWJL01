//##############################################
//###         Engine & Clcok Setting         ###
//##############################################
//# /* General reset register  and  General clock register */
pci_write(0x0202, 0xffff);
pci_write(0x0010, 0x4801); // BCLK PLL1_OUT2 / 2 = 107.5MHz
pci_write(0x0012, 0x0008);
pci_write(0x0014, 0xc001); // MCLK PLL1_OUT1 / 2 = 160MHz
pci_write(0x0016, 0x102a);
pci_write(0x0018, 0xc001); // NCLK PLL1_OUT1 / 2 = 160MHz
pci_write(0x001a, 0x0008);
pci_write(0x001c, 0xc003); // WCLK PLL1_OUT1 / 4 = 80MHz
pci_write(0x001e, 0x0aaa);
pci_write(0x0026, 0x302a);
pci_write(0x002a, 0x30aa);
pci_write(0x002e, 0x1002);
pci_write(0x0030, 0x8001); // ICLK PLL1_OUT1 / 2 = 160MHz
pci_write(0x0032, 0x702b);
pci_write(0x0034, 0x8001); // XCLK PLL1_OUT1 / 2 = 160MHz
pci_write(0x0036, 0xfaaa);
pci_write(0x003e, 0x70aa);
pci_write(0x0042, 0x1002);
pci_write(0x0044, 0xf7ff);
pci_write(0x0046, 0x100a);
pci_write(0x0048, 0x700a);
pci_write(0x004a, 0x1002);
pci_write(0x004c, 0xC000); // FCLK PLL1_OUT1 = 320MHz
//pci_write(0x004e, 0x803f); // ARM Reset
pci_write(0x0050, 0x8000);
pci_write(0x0052, 0x8000);
pci_write(0x0054, 0x8000);
pci_write(0x0056, 0x80aa);
pci_write(0x0058, 0x9000); // TCLK PLL1_OUT2 = 215MHz
pci_write(0x005a, 0x9000); // VCLK PLL1_OUT2 = 215MHz
pci_write(0x0060, 0xf801);

pci_write(0x0016, 0x002a); //M1CLK/N2CLK/N10CLK Setting
pci_write(0x001a, 0x0008); //N1CLK Setting
pci_write(0x001e, 0x0aaa); //WCLK Device Setting
pci_write(0x0020, 0x00aa); //WCLK Device Setting
pci_write(0x0022, 0x0000); //USB Clock Setting
pci_write(0x0026, 0x002a); //M3CLK Setting
pci_write(0x0028, 0x8000); //DCLK CLK Source PLL1_N1
pci_write(0x002a, 0x00aa); //DHCLK/LCLK/DCLK Clock Setting
pci_write(0x002c, 0x8000); //ECLK CLK Source PLL1_N1
pci_write(0x002e, 0x0002); //YCLK/ECLK Clock Setting
pci_write(0x0030, 0x8001); //ICLK CLK Source PLL1_N1
pci_write(0x0032, 0x002b); //N5CLK/M5CLK/ICLK Clock Setting
pci_write(0x0034, 0x8001); //XCLK CLK Source PLL1_N1
pci_write(0x0036, 0x0aaa); //JPEG Clock Setting
pci_write(0x003A, 0x8000); //AMCLK CLK Source PLL1_N1
pci_write(0x003C, 0x8000); //ZCLK Clock Setting
pci_write(0x003e, 0x00aa); //Audio DAC Clock Setting
pci_write(0x0042, 0x0002); //PCR Clock Setting
pci_write(0x0044, 0x003f); //RISC Clock Setting
pci_write(0x0046, 0x000a); //USB Clock Setting
pci_write(0x0048, 0x000a); //TSI Clock Setting
pci_write(0x004a, 0x0002); //De-Interleave Clock Setting
pci_write(0x004e, 0x003f); //ARM Clcok Setting
pci_write(0x0054, 0x8000);
pci_write(0x0056, 0x00aa);
pci_write(0x0060, 0x3801);
pci_write(0x0062, 0x1000);
pci_write(0x16b2, 0x1029);

# Sdclk div = WCLK/8
pci_write(0xb010, 0x001c);

# Sd IO delay
pci_write(0xb08c, 0x00ff);
pci_write(0xb08e, 0x0100);

# NORclk div = WCLK/8 = (3+1)*2
pci_write(0x9c04, 0x0003);

# NAND IO delay
pci_write(0xd0700024, 0x02077777);

##############################################
# /* PLL1 640MHz ck1_n1=320MHz , ck1_n2=215MHz */
##############################################
#pci_write(0x00a0, 0x8501);
#pci_write(0x00a2, 0x0302);
#pci_write(0x00a6, 0x231c);
#pci_write(0x00a4, 0x2000);
#pci_write(0x00a4, 0x3000);
#pci_write(0x00a4, 0x2000);

# Spread Spectrum 0.3%, modulation freq. 30KHz.
#pci_write(0x00a8, 0x0006);
#pci_write(0x00aa, 0xb449);

pci_write(0x00a0, 0x480c);
pci_write(0x00a2, 0x0302);
pci_write(0x00a4, 0x2280);
pci_write(0x00a4, 0x3280);
pci_write(0x00a4, 0x2280);

##############################################
# /* PLL2 ck2_n1=166MHz , ck2_n2=166MHz */
##############################################
pci_write(0x00b0, 0x480c);
pci_write(0x00b2, 0x0404);
pci_write(0x00b4, 0x2298);
pci_write(0x00b4, 0x3298);
pci_write(0x00b4, 0x2298);

##############################################
# /* PLL3 ck3_n1=148.5MHz , ck3_n2=74.25MHz */
##############################################
pci_write(0x00c0, 0x400c);
pci_write(0x00c2, 0x0c06);
pci_write(0x00c4, 0x237b);
pci_write(0x00c4, 0x337b);
pci_write(0x00c4, 0x237b);

# /* Host bus controller registers */
pci_write(0x0200, 0x0000);
pci_write(0x0202, 0xffff);
pci_write(0x0210, 0x0002); # Host_IO_Drv="01"
pci_write(0x0214, 0x0c00);

##############################################
###              Memory Setting            ###
##############################################
# /*Memory IO strength Setting*/

# /* Memory controller registers */
# /* select MA13 MA12 as bank address */
# /* tiling, bank interleave, 128MB 8banks 16BusWidth 10BitsCadd tilingWidth 128byte*/
pci_write( 0x0300, 0xb2a8);
pci_write( 0x0302, 0x0000);
pci_write( 0x030a, 0x0025);# //enable auto precharge,2path//
pci_write( 0x0310, 0x1a22);# //B0DTRFC,B0DTRCD, B0DTRP
pci_write( 0x0312, 0x6412);# //B0DTWR, B0DTWTR,B0DTXP,B0DTRTW
pci_write( 0x0314, 0x0027);# //B0DTDQM,B0DTRRD,B0DTDQL --OM
pci_write( 0x0316, 0x1000);# //B0DTRTP,B0DTREFI
pci_write( 0x0318, 0x2208);# //B0DTENCKGAT,B0DTRAS
pci_write( 0x031A, 0x2000);# //B0DTBL8,B0DTWL--OM
pci_write( 0x031c, 0x6121);# //B0DTMRD,B0DTXSNR

pci_write( 0x0340, 0x2F40);# //PLL MX2CLK UPDATE --OM
pci_write( 0x0340, 0x3F40);# //PLL MX2CLK UPDATE --OM
pci_write( 0x0340, 0x2F40);# //PLL MX2CLK UPDATE --OM

pci_write( 0x0342, 0x2B0A);# //DLL SETTING // 320MHZ -- 0X2308  , 400MHZ -- 0X2409
pci_write( 0x0344, 0x0001);# //DLLPHASE
pci_write( 0x0348, 0x0000);# //B0DTDQSI

pci_write( 0x03aa, 0x1FFF);# //BIST END ADDRESS

pci_write( 0x0334, 0x0000);# //MCLKP Out Setting & MA &CMD
pci_write( 0x0336, 0xD100);# //ODT Enable & MDQS IO Driving
pci_write( 0x0330, 0x1063);# //IO Driving
pci_write( 0x0332, 0x1C84);# //IO Driving

pci_write( 0x0396, 0xbf00);# //MAX GNT

pci_write( 0x0338, 0x0000);
pci_write( 0x033A, 0x1414);
pci_write( 0x0338, 0x0080);

pci_write( 0x0338, 0x0001);
pci_write( 0x033A, 0x1414);
pci_write( 0x0338, 0x0081);

pci_write( 0x0338, 0x0002);
pci_write( 0x033A, 0x1414);
pci_write( 0x0338, 0x0082);

pci_write( 0x0338, 0x0003);
pci_write( 0x033A, 0x1414);
pci_write( 0x0338, 0x0083);

pci_write( 0x0338, 0x0004);
pci_write( 0x033A, 0x1414);
pci_write( 0x0338, 0x0084);

pci_write( 0x0338, 0x0005);
pci_write( 0x033A, 0x1414);
pci_write( 0x0338, 0x0085);

pci_write( 0x0338, 0x0006);
pci_write( 0x033A, 0x1414);
pci_write( 0x0338, 0x0086);

pci_write( 0x0338, 0x0007);
pci_write( 0x033A, 0x1414);
pci_write( 0x0338, 0x0087);

pci_write( 0x0338, 0x0008);
pci_write( 0x033A, 0x0C0C);
pci_write( 0x0338, 0x0088);

pci_write( 0x0338, 0x0009);
pci_write( 0x033A, 0x0C0C);
pci_write( 0x0338, 0x0089);

pci_write( 0x0338, 0x000A);
pci_write( 0x033A, 0x0C0C);
pci_write( 0x0338, 0x008A);

pci_write( 0x0338, 0x000B);
pci_write( 0x033A, 0x0C0C);
pci_write( 0x0338, 0x008B);

pci_write( 0x0338, 0x000C);
pci_write( 0x033A, 0x0C0C);
pci_write( 0x0338, 0x008C);

pci_write( 0x0338, 0x000D);
pci_write( 0x033A, 0x0C0C);
pci_write( 0x0338, 0x008D);

pci_write( 0x0338, 0x000E);
pci_write( 0x033A, 0x0C0C);
pci_write( 0x0338, 0x008E);

pci_write( 0x0338, 0x000F);
pci_write( 0x033A, 0x0C0C);
pci_write( 0x0338, 0x008F);

pci_write( 0x0338, 0x0000);

wait(50000);

# /* Extend mode register 2: 1X refresh rate*/
pci_write( 0x0304, 0x8000);
pci_write( 0x0308, 0x0800);
wait(50000);
pci_write( 0x0308, 0x8800);
pci_write( 0x0316, 0x1270);
wait(50000);

# /* Extend mode register 3: */
pci_write( 0x0304, 0xc000);
pci_write( 0x0308, 0x0800);
wait(50000);
pci_write( 0x0308, 0x8800);
wait(50000);

# /* Extend mode register: DLL enable*/
pci_write( 0x0304, 0x4000);
pci_write( 0x0308, 0x0800);
wait(50000);
pci_write( 0x0308, 0x8800);
wait(50000);

# /* mode register: burst length=4, CAS latency=6 , DLL reset*/
pci_write( 0x0304, 0x0162);
pci_write( 0x0308, 0x0800);
wait(50000);
pci_write( 0x0308, 0x8800);
wait(50000);

# /* mode register: burst length=4, CAS latency=6, DLL reset Off*/
pci_write( 0x0304, 0x0062);
pci_write( 0x0308, 0x0800);
wait(50000);
pci_write( 0x0308, 0xc800);
wait(50000);

# /* Extend mode register: OCD default*/
pci_write( 0x0304, 0x43C4);
pci_write( 0x0308, 0x0800);
wait(50000);
pci_write( 0x0308, 0x8800);
wait(50000);

# /* Extend mode register: OCD exit*/
pci_write( 0x0304, 0x4044);# odt
pci_write( 0x0308, 0x0800);
wait(50000);
pci_write( 0x0308, 0xC800);# //turn off PD
wait(50000);

pci_write( 0x03aa, 0x1FFF);# //BIST END ADDRESS

# /* boot DATA   start_addr  length  width   pitch  filename */
data(${CFG_LCDA_ADDR}, ${CFGLCDHEIGHT}, ${CFG_LCD_BYTEWIDTH}, ${CFGLCDPITCH}, init.bin);



pci_write(0x00C0, 0x401e);
pci_write(0x00C2, 0x0000);
pci_write(0x00C4, 0x2050);
pci_write(0x00C4, 0x3050);
pci_write(0x00C4, 0x2050);

pci_write(0x0028, 0xc001);
pci_write(0x0052, 0xc001);


pci_write(0x1100, 0x6400);
pci_write(0x1102, 0x0000);
pci_write(0x1104, 0x800a);
pci_write(0x1106, 0x0000);
pci_write(0x1108, 0x0f9e);
pci_write(0x110c, 0x0320);
pci_write(0x110e, 0x0258);
pci_write(0x1110, 0x0640);
pci_write(0x1112, 0x0000);
pci_write(0x1114, 0x0000);

pci_write(0x1138, 0x2000);

pci_write(0x1140, 0x0320);
pci_write(0x1142, 0x0258);
pci_write(0x1144, 0x0000);
pci_write(0x1146, 0x0000);
pci_write(0x1148, 0x4000);
pci_write(0x114a, 0x0000);
pci_write(0x114c, 0x4000);
pci_write(0x114e, 0x0000);

pci_write(0x1150, 0x8320);
pci_write(0x1152, 0x0258);
pci_write(0x1154, 0x0000);
pci_write(0x1156, 0x0000);
pci_write(0x1158, 0x4000);
pci_write(0x115a, 0x0000);
pci_write(0x115c, 0x4000);
pci_write(0x115e, 0x0000);

pci_write(0x12e0, 0x0320);
pci_write(0x12e2, 0x0258);
pci_write(0x12e4, 0x0000);
pci_write(0x12e6, 0x0000);

pci_write(0x12e8, 0x0320);
pci_write(0x12ea, 0x0258);
pci_write(0x12ec, 0x0000);
pci_write(0x12ee, 0x0000);

pci_write(0x12f0, 0x0000);
pci_write(0x12f2, 0x0000);

pci_write(0x1170, 0x0000);
pci_write(0x1172, 0x0100);
pci_write(0x1174, 0x0000);
pci_write(0x1176, 0x015f);
pci_write(0x1178, 0x0151);
pci_write(0x117a, 0x0100);
pci_write(0x117c, 0x03aa);
pci_write(0x117e, 0x034d);
pci_write(0x1180, 0x0084);
pci_write(0x1182, 0x0100);
pci_write(0x1184, 0x01bb);
pci_write(0x1186, 0x0000);
pci_write(0x1188, 0x0123);

pci_write(0x1190, 0x0000);
pci_write(0x1192, 0x0100);
pci_write(0x1194, 0x0000);
pci_write(0x1196, 0x015f);
pci_write(0x1198, 0x0151);
pci_write(0x119a, 0x0100);
pci_write(0x119c, 0x03aa);
pci_write(0x119e, 0x034d);
pci_write(0x11a0, 0x0084);
pci_write(0x11a2, 0x0100);
pci_write(0x11a4, 0x01bb);
pci_write(0x11a6, 0x0000);
pci_write(0x11a8, 0x0123);


pci_write(0x11b0, 0x0840);
pci_write(0x11b2, 0x0840);

pci_write(0x11b4, 0x0000);
pci_write(0x11b6, 0x0700);
pci_write(0x11b8, 0x03E8);
pci_write(0x11ba, 0x0294);
pci_write(0x11bc, 0x03E8);
pci_write(0x11be, 0x0294);

pci_write(0x11c0, 0x0028);
pci_write(0x11c2, 0x1001);
pci_write(0x11c4, 0x03e8);
pci_write(0x11c6, 0x2001);
pci_write(0x11c8, 0x0028);
pci_write(0x11ca, 0x1001);
pci_write(0x11cc, 0x03e8);
pci_write(0x11ce, 0x2001);

pci_write(0x11d0, 0x0028);
pci_write(0x11d2, 0x500a);
pci_write(0x11d4, 0x0028);
pci_write(0x11d6, 0x2294);
pci_write(0x11d8, 0x0028);
pci_write(0x11da, 0x100a);
pci_write(0x11dc, 0x0028);
pci_write(0x11de, 0x2294);

pci_write(0x11e0, 0x0058);
pci_write(0x11e2, 0x1020);
pci_write(0x11e4, 0x0378);
pci_write(0x11e6, 0x2278);
pci_write(0x11e8, 0x0058);
pci_write(0x11ea, 0x1020);
pci_write(0x11ec, 0x0378);
pci_write(0x11ee, 0x2278);


pci_write(0x1230, 0x0028);
pci_write(0x1232, 0x1001);
pci_write(0x1234, 0x03e8);
pci_write(0x1236, 0x2001);
pci_write(0x1238, 0x0028);
pci_write(0x123a, 0x1001);
pci_write(0x123c, 0x03e8);
pci_write(0x123e, 0x2001);

pci_write(0x1240, 0x0028);
pci_write(0x1242, 0x500a);
pci_write(0x1244, 0x0028);
pci_write(0x1246, 0x2294);
pci_write(0x1248, 0x0028);
pci_write(0x124a, 0x100a);
pci_write(0x124c, 0x0028);
pci_write(0x124e, 0x2294);

pci_write(0x1250, 0x0058);
pci_write(0x1252, 0x1020);
pci_write(0x1254, 0x0378);
pci_write(0x1256, 0x2278);
pci_write(0x1258, 0x0058);
pci_write(0x125a, 0x1020);
pci_write(0x125c, 0x0378);
pci_write(0x125e, 0x2278);

pci_write(0x1308, 0x6000);
pci_write(0x7c96, 0x0a80);
pci_write(0x7c9a, 0x4000);
pci_write(0x7c9c, 0x0055);

pci_write(0x111e, 0x0001);
wait(500000);
pci_write(0x111e, 0x0003);

# /* Memory Priority Setting for Arbitration */
pci_write( 0x0380, 0x1011); # Swap the priority for AHB > RISC > ARM > USB
pci_write( 0x0386, 0x0a0b);

#todo backlight enable