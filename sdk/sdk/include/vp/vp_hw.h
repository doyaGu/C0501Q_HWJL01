#ifndef __VP_HW_H_HL88MIOL_N62I_1CVD_9BT8_WHZ2ZK9PMMDS__
#define __VP_HW_H_HL88MIOL_N62I_1CVD_9BT8_WHZ2ZK9PMMDS__

#ifdef __cplusplus
extern "C" {
#endif


#include "vp/vp_types.h"
//=============================================================================
//                Constant Definition
//=============================================================================


//=============================================================================
//                Macro Definition
//=============================================================================


//=============================================================================
//                              Structure Definition
//=============================================================================


//=============================================================================
//                Global Data Definition
//=============================================================================


//=============================================================================
//                Private Function Definition
//=============================================================================


//=============================================================================
//                Public Function Definition
//=============================================================================
void 
VP_LogReg(
    void);

//=============================================================================
/**
 * Clear ISP Interrupt.
 */
//=============================================================================
void
VP_ClearInterrupt_Reg(
    void);
        
//=============================================================================
/**
* Driver Fire ISP Engine.
*/
//=============================================================================
void 
VP_DriverFire_Reg(
    void);

//=============================================================================
/**
 * Driver Refresh ISP Parameter.
 */
//=============================================================================
void
VP_RefreshFire_Reg(
    void);
    
//=============================================================================
/**
* Driver Update ISP Parameter.
*/
//=============================================================================
void 
VP_UpdateFire_Reg(
    void);

//=============================================================================
/**
* Set Input Format
*/
//=============================================================================
void 
VP_SetInputParameter_Reg(
    const VP_INPUT_INFO    *pInInfo);


//=============================================================================
/**
* Set ISP input buffer relate parameters.
*/
//=============================================================================
void 
VP_SetInputBuf_Reg(
    const VP_INPUT_INFO    *pInInfo);


//=============================================================================
/**
* Set ISP input buffer address relate parameters
*/
//=============================================================================
void 
VP_SetInputAddr_Reg(
    const VP_INPUT_INFO    *pInInfo);


//=============================================================================
/**
* Set Deinterlace Parameter.
*/
//=============================================================================
void 
VP_SetDeInterlaceParam_Reg(
    const VP_DEINTERLACE_CTRL  *pDeInterlace);


//=============================================================================
/**
* Set 3D-Deinterlace parameters.
*/
//=============================================================================
void 
VP_Set3DDeInterlaceParm_Reg(
    void);


//=============================================================================
/**
* Set 2D-Deinterlace parameters.
*/
//=============================================================================
void 
VP_Set2DDeInterlaceParam_Reg(
    void);

//=============================================================================
/**
 * Set Jpeg encode parameters
 */
//=============================================================================
void
VP_SetJpegEncode_Reg(
    const VP_JEPG_ENCODE_CTRL  *pJpegEncode);
        
//=============================================================================
/**
* Set color correction matrix and constant 
*/
//=============================================================================
void 
VP_SetCCMatrix_Reg(
    const VP_COLOR_CORRECTION  *pColorCorrect);


//=============================================================================
/*
* Set Scale Factor   
*/
//=============================================================================
void 
VP_SetScaleParam_Reg(
    const VP_SCALE_CTRL    *pScaleFun);


//=============================================================================
/**
* Set Scale Horizontal Weight.
*/
//=============================================================================
void 
VP_SetScaleMatrixH_Reg(
    const VP_SCALE_CTRL    *pScaleFun);

void 
VP_SetIntScaleMatrixH_Reg(
    MMP_UINT8  WeightMatX[][VP_SCALE_TAP]);


//=============================================================================
/**
* Set Scale Vertical Weight.
*/
//=============================================================================
void 
VP_SetScaleMatrixV_Reg(
    const VP_SCALE_CTRL    *pScaleFun);
    
void 
VP_SetIntScaleMatrixV_Reg(
    MMP_UINT8  WeightMatY[][VP_SCALE_TAP]);


//=============================================================================
/**
* FrmFun RGB to YUV transfer matrix.
*/
//=============================================================================
void 
VP_SetFrmMatrix_Reg(
    const VP_RGB_TO_YUV    *pMatrix);

//=============================================================================
/**
* Set Frame Function 0
*/
//=============================================================================
void 
VP_SetFrameFun0_Reg(
    const VP_FRMFUN_CTRL   *pFrameFun);


//=============================================================================
/**
* RGB to YUV transfer matrix.
*/
//=============================================================================
void 
VP_SetRGBtoYUVMatrix_Reg(
    const VP_RGB_TO_YUV    *pRGBtoYUV);


//=============================================================================
/**
* Set Output Format
*/
//=============================================================================
void 
VP_SetOutParameter_Reg(
    const VP_OUTPUT_INFO   *pOutInfo);


//=============================================================================
/**
* Set Output Information
*/
//=============================================================================
void 
VP_SetOutBufInfo_Reg(
    const VP_OUTPUT_INFO   *pOutInfo);


//=============================================================================
/**
* Set Output Address
*/
//=============================================================================
void 
VP_SetOutAddress_Reg(
    const VP_OUTPUT_INFO   *pOutInfo);


//=============================================================================
/**
* Set Remap Y Address
*/
//=============================================================================
void
VP_SetRemapYAddress_Reg(
    const VP_REMAP_ADDR   *pRemapAddr);
    

//=============================================================================
/**
* Set Remap UV Address
*/
//=============================================================================
void
VP_SetRemapUVAddress_Reg(
    const VP_REMAP_ADDR   *pRemapAddr);
        
//=============================================================================
/**
* Set Scene Change Parameter
*/
//=============================================================================
void
VP_SetSceneChange_Reg(
    const VP_SCENE_CHANGE   *pSceneChg);

void
VP_InitSceneChange_Reg(
    const VP_SCENE_CHANGE   *pSceneChg);

//=============================================================================
/**
 * Return ISP Scene Change total diff
 */
//=============================================================================
MMP_UINT16
VP_SceneChgTotalDiff_Reg(
    void);

//=============================================================================
/**
* Set Interrupt Information
*/
//=============================================================================
void
VP_SetInterruptParameter_Reg(
    const VP_CONTEXT *pISPctxt);

//=============================================================================
/**
 * Return ISP Write Buffer Index.
 */
//=============================================================================
MMP_UINT16
VP_RetrunWrBufIndex_Reg(
    void);
    
//=============================================================================
/**
* Wait ISP engine idle!  //for JPG module use
*/
//=============================================================================
MMP_RESULT 
VP_WaitEngineIdle(
    void);

//=============================================================================
/**
 * Is ISP engine idle! 
 */
//=============================================================================
MMP_BOOL
VP_IsEngineIdle(
    void);
    
//=============================================================================
/**
 * Wait ISP interrupt idle!
 */
//=============================================================================
MMP_RESULT
VP_WaitInterruptIdle(
    void);

//=============================================================================
/**
* Wait ISP change idle!
*/
//=============================================================================
MMP_RESULT 
VP_WaitISPChangeIdle(
    void);

//=============================================================================
/**
* ISP engine clock related.
*/
//=============================================================================
void 
VP_PowerUp(
    void);
    
    
void 
VP_PowerDown(
    void);
    
void 
HOST_VP_Reset(
    void);

void
VP_EnableClock(
    void);
    
void
VP_DisableClock(
    void);
#ifdef __cplusplus
}
#endif

#endif

