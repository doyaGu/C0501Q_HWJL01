#ifndef __IMDCT_TAB_H__
#define __IMDCT_TAB_H__

/* PHASE1
 * copy table from imdct_table, print_window_function
 * cs[8], ca[9] is reordered from original source code
 */

const int cs[8] = {
    0x6dc253f0, 0x70dcebe4, 0x798d6e73, 0x7ddd40a7,
    0x7f6d20b7, 0x7fe47e40, 0x7ffcb263, 0x7fffc694,
};
const int ca[8] = {
    0xbe2500aa, 0xc39e4949, 0xd7e33f4a, 0xe8b71176,
    0xf3e4fe2f, 0xfac1a3c7, 0xfe2ebdc6, 0xff86c25d,
};

// imdct36 & imdct12 table
// format: S.31
// MAX costab36_0[88]=0.991445, 0x7ee7aa4b
// MIN costab36_0[89]=-0.999048,0x801f3019
// different entries: 34
//
// MAX costab36_1[45]=0.991445, 0x7ee7aa4b
// MIN costab36_1[20]=-0.999048,0x801f3019
// different entries: 30
//
// MAX costab36_2[12]=0.999048, 0x7fe0cfe7
// MIN costab36_2[41]=-0.999048,0x801f3019
// different entries: 34
//
// MAX costab36_3[42]=0.999048, 0x7fe0cfe7
// MIN costab36_3[11]=-0.999048,0x801f3019
// different entries: 30
//
// MAX costab12_0[3]=0.991445,  0x7ee7aa4b
// MIN costab12_0[10]=-0.923880,0x89be50c4
// different entries: 9
//
// MAX costab12_1[1]=0.923880,  0x7641af3c
// MIN costab12_1[9]=-0.923880, 0x89be50c4
// different entries: 4
//
// MAX costab12_2[4]=0.923880,  0x7641af3c
// MIN costab12_2[5]=-0.991445, 0x811855b5
// different entries: 9

/* we update costab36 at PHASE1.1
int costab36_0[108]={
0x5679bd6b, 0x9a7365d3, 0xbb39c435, 0x7189922b, 0x30fbc54d, 0x85ec9a5c,
0xe44bb4ed, 0x7ee7aa4b, 0x059551f1, 0x801f3019, 0x10b5150f, 0x7cf7447e,
0xd98278ed, 0x89be50c4, 0x3b1a941c, 0x6bf4403a, 0xb2141b02, 0xa1a0e570,
0x30fbc54d, 0x89be50c4, 0x7641af3c, 0xcf043ab3, 0xcf043ab3, 0x7641af3c,
0x89be50c4, 0x30fbc54d, 0x30fbc54d, 0x89be50c4, 0x7641af3c, 0xcf043ab3,
0xcf043ab3, 0x7641af3c, 0x89be50c4, 0x30fbc54d, 0x30fbc54d, 0x89be50c4,
0xa1a0e570, 0x4debe4fe, 0x6bf4403a, 0xc4e56be4, 0x89be50c4, 0x267d8713,
0x7cf7447e, 0xef4aeaf1, 0x801f3019, 0xfa6aae0f, 0x7ee7aa4b, 0x1bb44b13,
0x85ec9a5c, 0xcf043ab3, 0x7189922b, 0x44c63bcb, 0x9a7365d3, 0xa9864295,
0x89be50c4, 0xcf043ab3, 0x30fbc54d, 0x7641af3c, 0x7641af3c, 0x30fbc54d,
0xcf043ab3, 0x89be50c4, 0x89be50c4, 0xcf043ab3, 0x30fbc54d, 0x7641af3c,
0x7641af3c, 0x30fbc54d, 0xcf043ab3, 0x89be50c4, 0x89be50c4, 0xcf043ab3,
0x059551f1, 0xef4aeaf1, 0x1bb44b13, 0xd98278ed, 0x30fbc54d, 0xc4e56be4,
0x44c63bcb, 0xb2141b02, 0x5679bd6b, 0xa1a0e570, 0x658c9a2d, 0x940bbfc6,
0x7189922b, 0x89be50c4, 0x7a1365a4, 0x8308bb82, 0x7ee7aa4b, 0x801f3019,
0x801f3019, 0x811855b5, 0x8308bb82, 0x85ec9a5c, 0x89be50c4, 0x8e766dd5,
0x940bbfc6, 0x9a7365d3, 0xa1a0e570, 0xa9864295, 0xb2141b02, 0xbb39c435,
0xc4e56be4, 0xcf043ab3, 0xd98278ed, 0xe44bb4ed, 0xef4aeaf1, 0xfa6aae0f,
};

int costab36_1[72]={
0xb2141b02, 0x7641af3c, 0x10b5150f, 0x811855b5, 0x30fbc54d, 0x658c9a2d,
0x9a7365d3, 0xcf043ab3, 0x7ee7aa4b, 0xef4aeaf1, 0x89be50c4, 0x4debe4fe,
0x4debe4fe, 0x89be50c4, 0xef4aeaf1, 0x7ee7aa4b, 0xcf043ab3, 0x9a7365d3,
0xd98278ed, 0x658c9a2d, 0x801f3019, 0x6bf4403a, 0xcf043ab3, 0xe44bb4ed,
0x5e5f1a90, 0x811855b5, 0x7189922b, 0xc4e56be4, 0xef4aeaf1, 0x5679bd6b,
0x8308bb82, 0x7641af3c, 0xbb39c435, 0xfa6aae0f, 0x4debe4fe, 0x85ec9a5c,
0x658c9a2d, 0xcf043ab3, 0x811855b5, 0xef4aeaf1, 0x7641af3c, 0x4debe4fe,
0xb2141b02, 0x89be50c4, 0x10b5150f, 0x7ee7aa4b, 0x30fbc54d, 0x9a7365d3,
0x9a7365d3, 0x30fbc54d, 0x7ee7aa4b, 0x10b5150f, 0x89be50c4, 0xb2141b02,
0x7a1365a4, 0x4debe4fe, 0x059551f1, 0xbb39c435, 0x89be50c4, 0x8308bb82,
0xa9864295, 0xef4aeaf1, 0x3b1a941c, 0x7189922b, 0x7ee7aa4b, 0x5e5f1a90,
0x1bb44b13, 0xcf043ab3, 0x940bbfc6, 0x801f3019, 0x9a7365d3, 0xd98278ed,
};

int costab36_2[72]={
0x44c63bcb, 0x811855b5, 0x267d8713, 0x5e5f1a90, 0x89be50c4, 0x059551f1,
0x7189922b, 0x9a7365d3, 0xe44bb4ed, 0x7cf7447e, 0xb2141b02, 0xc4e56be4,
0x7fe0cfe7, 0xcf043ab3, 0xa9864295, 0x7a1365a4, 0xef4aeaf1, 0x940bbfc6,
0x1bb44b13, 0xb2141b02, 0x7189922b, 0x801f3019, 0x7641af3c, 0xa9864295,
0x267d8713, 0x10b5150f, 0xbb39c435, 0x6bf4403a, 0x811855b5, 0x7a1365a4,
0xa1a0e570, 0x30fbc54d, 0x059551f1, 0xc4e56be4, 0x658c9a2d, 0x8308bb82,
0x940bbfc6, 0x10b5150f, 0x7a1365a4, 0x5679bd6b, 0xcf043ab3, 0x801f3019,
0xc4e56be4, 0x4debe4fe, 0x7cf7447e, 0x1bb44b13, 0x9a7365d3, 0x8e766dd5,
0x059551f1, 0x7641af3c, 0x5e5f1a90, 0xd98278ed, 0x811855b5, 0xbb39c435,
0x8308bb82, 0x9a7365d3, 0xc4e56be4, 0xfa6aae0f, 0x30fbc54d, 0x5e5f1a90,
0x7a1365a4, 0x7ee7aa4b, 0x6bf4403a, 0x44c63bcb, 0x10b5150f, 0xd98278ed,
0xa9864295, 0x89be50c4, 0x801f3019, 0x8e766dd5, 0xb2141b02, 0xe44bb4ed,
};

int costab36_3[72]={
0xc4e56be4, 0x7ee7aa4b, 0xa9864295, 0xe44bb4ed, 0x7641af3c, 0x940bbfc6,
0x059551f1, 0x658c9a2d, 0x85ec9a5c, 0x267d8713, 0x4debe4fe, 0x801f3019,
0x44c63bcb, 0x30fbc54d, 0x8308bb82, 0x5e5f1a90, 0x10b5150f, 0x8e766dd5,
0xef4aeaf1, 0x30fbc54d, 0xb2141b02, 0x658c9a2d, 0x89be50c4, 0x7ee7aa4b,
0x811855b5, 0x7641af3c, 0x9a7365d3, 0x4debe4fe, 0xcf043ab3, 0x10b5150f,
0x10b5150f, 0xcf043ab3, 0x4debe4fe, 0x9a7365d3, 0x7641af3c, 0x811855b5,
0x7189922b, 0x10b5150f, 0xa1a0e570, 0x8308bb82, 0xcf043ab3, 0x44c63bcb,
0x7fe0cfe7, 0x4debe4fe, 0xd98278ed, 0x85ec9a5c, 0x9a7365d3, 0x059551f1,
0x6bf4403a, 0x7641af3c, 0x1bb44b13, 0xa9864295, 0x811855b5, 0xc4e56be4,
0x7ee7aa4b, 0x7641af3c, 0x658c9a2d, 0x4debe4fe, 0x30fbc54d, 0x10b5150f,
0xef4aeaf1, 0xcf043ab3, 0xb2141b02, 0x9a7365d3, 0x89be50c4, 0x811855b5,
0x811855b5, 0x89be50c4, 0x9a7365d3, 0xb2141b02, 0xcf043ab3, 0xef4aeaf1,
};
 */
/*
int costab12_0[12]={
0x4debe4fe, 0x89be50c4, 0xef4aeaf1, 0x7ee7aa4b, 0xcf043ab3, 0x9a7365d3,
0x9a7365d3, 0x30fbc54d, 0x7ee7aa4b, 0x10b5150f, 0x89be50c4, 0xb2141b02,
};

int costab12_1[12]={
0xcf043ab3, 0x7641af3c, 0x89be50c4, 0x30fbc54d, 0x30fbc54d, 0x89be50c4,
0x7641af3c, 0x30fbc54d, 0xcf043ab3, 0x89be50c4, 0x89be50c4, 0xcf043ab3,
};

int costab12_2[12]={
0x10b5150f, 0xcf043ab3, 0x4debe4fe, 0x9a7365d3, 0x7641af3c, 0x811855b5,
0x811855b5, 0x89be50c4, 0x9a7365d3, 0xb2141b02, 0xcf043ab3, 0xef4aeaf1,
};

// long, short, stop window table
// format: S1.30
// MAX window_sa[5]=0.991445,   0x3f73d525
// MIN window_sa[0]=0.130526,   0x085a8a87
//
// MAX window_sb[0]=0.991445,   0x3f73d525
// MIN window_sb[5]=0.130526,   0x085a8a87
//
// MAX window_ma[8]=0.608761,   0x26f5f27f
// MIN window_ma[0]=0.000000,   0x00000000
//
// MAX window_mb[0]=1.000000,   0x40000000
// MIN window_mb[8]=0.793353,   0x32c64d16
//
// MAX window_la[8]=0.675590,   0x2b3cdeb5
// MIN window_la[0]=0.043619,   0x02caa8f8
//
// MAX window_lb[0]=0.999048,   0x3ff067f3
// MIN window_lb[8]=0.737277,   0x2f2f8d48

int window_sa[6]={
0x085a8a87, 0x187de2a6, 0x26f5f27f, 0x32c64d16, 0x3b20d79e, 0x3f73d525,
};

int window_sb[6]={
0x3f73d525, 0x3b20d79e, 0x32c64d16, 0x26f5f27f, 0x187de2a6, 0x085a8a87,
};

int window_ma[9]={
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x085a8a87, 0x187de2a6, 0x26f5f27f,
};

int window_mb[9]={
0x40000000, 0x40000000, 0x40000000, 0x40000000, 0x40000000, 0x40000000,
0x3f73d525, 0x3b20d79e, 0x32c64d16,
};

int window_la[9]={
0x02caa8f8, 0x085a8a87, 0x0dda2589, 0x133ec389, 0x187de2a6, 0x1d8d4a0e,
0x22631de5, 0x26f5f27f, 0x2b3cdeb5,
};

int window_lb[9]={
0x3ff067f3, 0x3f73d525, 0x3e7ba23f, 0x3d09b2d2, 0x3b20d79e, 0x38c4c915,
0x35fa201d, 0x32c64d16, 0x2f2f8d48,
};

// frequency inversion table
// need no shift
//

int freqinv_a[9] = {// 1,-1, 1,-1, 1,-1, 1,-1, 1
0x00000001, 0xffffffff, 0x00000001, 0xffffffff, 0x00000001, 0xffffffff, 0x00000001, 0xffffffff, 0x00000001,
};

int freqinv_b[9] = {//-1, 1,-1, 1,-1, 1,-1, 1,-1
0xffffffff, 0x00000001, 0xffffffff, 0x00000001, 0xffffffff, 0x00000001, 0xffffffff, 0x00000001, 0xffffffff,
};
 */

/* PHASE2
 * replace long, short, stop window table and frequency inversion table
 * with window_freqinv table
 */
/*
int costab12_0[12]={
0x4debe4fe, 0x89be50c4, 0xef4aeaf1, 0x7ee7aa4b, 0xcf043ab3, 0x9a7365d3,
0x9a7365d3, 0x30fbc54d, 0x7ee7aa4b, 0x10b5150f, 0x89be50c4, 0xb2141b02,
};

int costab12_1[12]={
0xcf043ab3, 0x7641af3c, 0x89be50c4, 0x30fbc54d, 0x30fbc54d, 0x89be50c4,
0x7641af3c, 0x30fbc54d, 0xcf043ab3, 0x89be50c4, 0x89be50c4, 0xcf043ab3,
};

int costab12_2[12]={
0x10b5150f, 0xcf043ab3, 0x4debe4fe, 0x9a7365d3, 0x7641af3c, 0x811855b5,
0x811855b5, 0x89be50c4, 0x9a7365d3, 0xb2141b02, 0xcf043ab3, 0xef4aeaf1,
};

//group1
// freqinv_a[9..17] is only used for HybridTransform(...) overlapping zero
int freqinv_a[18]={
0x40000000, 0xc0000000, 0x40000000, 0xc0000000, 0x40000000, 0xc0000000,
0x40000000, 0xc0000000, 0x40000000, 0xc0000000, 0x40000000, 0xc0000000,
0x40000000, 0xc0000000, 0x40000000, 0xc0000000, 0x40000000, 0xc0000000,
};

//group2
int window_sa[6]={
0x085a8a87, 0x187de2a6, 0x26f5f27f, 0x32c64d16, 0x3b20d79e, 0x3f73d525,
};

int window_sa_freqinv[6]={
0x085a8a87, 0xe7821d5a, 0x26f5f27f, 0xcd39b2ea, 0x3b20d79e, 0xc08c2adb,
};

int window_ma[9]={
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x085a8a87, 0x187de2a6, 0x26f5f27f, };

int window_ma_freqinv[9]={
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x085a8a87, 0xe7821d5a, 0x26f5f27f, };

int window_la[9]={
0x02caa8f8, 0x085a8a87, 0x0dda2589, 0x133ec389, 0x187de2a6, 0x1d8d4a0e,
0x22631de5, 0x26f5f27f, 0x2b3cdeb5, };

int window_la_freqinv[9]={
0x02caa8f8, 0xf7a57579, 0x0dda2589, 0xecc13c77, 0x187de2a6, 0xe272b5f2,
0x22631de5, 0xd90a0d81, 0x2b3cdeb5, };

//group3
int freqinv_b[9]={
0xc0000000, 0x40000000, 0xc0000000, 0x40000000, 0xc0000000, 0x40000000,
0xc0000000, 0x40000000, 0xc0000000, };

//group4
int window_sb[6]={
0x3f73d525, 0x3b20d79e, 0x32c64d16, 0x26f5f27f, 0x187de2a6, 0x085a8a87,
};

int window_sb_freqinv[6]={
0x3f73d525, 0xc4df2862, 0x32c64d16, 0xd90a0d81, 0x187de2a6, 0xf7a57579,
};

int window_mb[9]={
0x40000000, 0x40000000, 0x40000000, 0x40000000, 0x40000000, 0x40000000,
0x3f73d525, 0x3b20d79e, 0x32c64d16, };

int window_mb_freqinv[9]={
0xc0000000, 0x40000000, 0xc0000000, 0x40000000, 0xc0000000, 0x40000000,
0xc08c2adb, 0x3b20d79e, 0xcd39b2ea, };

int window_lb[9]={
0x3ff067f3, 0x3f73d525, 0x3e7ba23f, 0x3d09b2d2, 0x3b20d79e, 0x38c4c915,
0x35fa201d, 0x32c64d16, 0x2f2f8d48, };

int window_lb_freqinv[9]={
0xc00f980d, 0x3f73d525, 0xc1845dc1, 0x3d09b2d2, 0xc4df2862, 0x38c4c915,
0xca05dfe3, 0x32c64d16, 0xd0d072b8, };
 */
/* PHASE3
 * use new costab12_0, costab12_1, costab12_2, costab12_3 tables and
 * remove window_sa[6], window_sa_freqinv[6], window_sb[6], and
 * window_sb_freqinv[6]
 */
//group0
// freqinv_a[9..17] is only used for HybridTransform(...) overlapping zero
static const int freqinv_a[18]={
0x40000000, 0xc0000000, 0x40000000, 0xc0000000, 0x40000000, 0xc0000000,
0x40000000, 0xc0000000, 0x40000000, 0xc0000000, 0x40000000, 0xc0000000,
0x40000000, 0xc0000000, 0x40000000, 0xc0000000, 0x40000000, 0xc0000000,
};

//group1
static const int window_ma[9]={
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x085a8a87, 0x187de2a6, 0x26f5f27f, };

static const int window_ma_freqinv[9]={
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x085a8a87, 0xe7821d5a, 0x26f5f27f, };

static const int window_la[9]={
0x02caa8f8, 0x085a8a87, 0x0dda2589, 0x133ec389, 0x187de2a6, 0x1d8d4a0e,
0x22631de5, 0x26f5f27f, 0x2b3cdeb5, };

static const int window_la_freqinv[9]={
0x02caa8f8, 0xf7a57579, 0x0dda2589, 0xecc13c77, 0x187de2a6, 0xe272b5f2,
0x22631de5, 0xd90a0d81, 0x2b3cdeb5, };

//group2
static const int freqinv_b[9]={
0xc0000000, 0x40000000, 0xc0000000, 0x40000000, 0xc0000000, 0x40000000,
0xc0000000, 0x40000000, 0xc0000000, };

//group3
static const int window_mb[9]={
0x40000000, 0x40000000, 0x40000000, 0x40000000, 0x40000000, 0x40000000,
0x3f73d525, 0x3b20d79e, 0x32c64d16, };

static const int window_mb_freqinv[9]={
0xc0000000, 0x40000000, 0xc0000000, 0x40000000, 0xc0000000, 0x40000000,
0xc08c2adb, 0x3b20d79e, 0xcd39b2ea, };

static const int window_lb[9]={
0x3ff067f3, 0x3f73d525, 0x3e7ba23f, 0x3d09b2d2, 0x3b20d79e, 0x38c4c915,
0x35fa201d, 0x32c64d16, 0x2f2f8d48, };

static const int window_lb_freqinv[9]={
0xc00f980d, 0x3f73d525, 0xc1845dc1, 0x3d09b2d2, 0xc4df2862, 0x38c4c915,
0xca05dfe3, 0x32c64d16, 0xd0d072b8, };

//precision=S.31
//MAX costab12_0[7]=0.853553,   0x6d413ccc
//MIN costab12_0[8]=-0.853553,  0x92bec334
//different entries: 15
//
//MAX costab12_1[9]=0.982963,   0x7dd1ba8e
//MIN costab12_1[7]=-0.915976,  0x8ac14fa1
//different entries: 15
//
//MAX costab12_2[8]=0.982963,   0x7dd1ba8e
//MIN costab12_2[10]=-0.915976, 0x8ac14fa1
//different entries: 15
//
//MAX costab12_3[6]=0.853553,   0x6d413ccc
//MIN costab12_3[9]=-0.853553,  0x92bec334
//different entries: 15

//group0
static const int costab12_0[18]={
0x0a2bb903, 0xf0907dc2, 0xfdd1ba8f, 0x10907dc1, 0xf99b3b43, 0xf2bec334,
0xd2bec334, 0x6d413ccc, 0x92bec334, 0x2d413ccc, 0x2d413ccc, 0x92bec334,
0x9b51cd63, 0xa22e4572, 0xaf6f823f, 0xc22e4572, 0xd92387f1, 0xf2bec334,
};
//group1
static const int costab12_1[18]={
0xed413ccd, 0x2d413ccc, 0xd2bec334, 0x12bec333, 0x12bec333, 0xd2bec334,
0x4d413ccc, 0x8ac14fa1, 0xef6f823f, 0x7dd1ba8e, 0xcf6f823f, 0x9b51cd63,
0x4d413ccc, 0x47fd7392, 0x3dd1ba8e, 0x2f6f823e, 0x1dd1ba8e, 0x0a2bb903,
};
//group2
static const int costab12_2[18]={
0x0a2bb903, 0xe22e4572, 0x2f6f823e, 0xc22e4572, 0x47fd7392, 0xb2bec334,
0x9b51cd63, 0x30907dc1, 0x7dd1ba8e, 0x10907dc1, 0x8ac14fa1, 0xb2bec334,
0xd2bec334, 0xed413ccd, 0x12bec333, 0x2d413ccc, 0x2d413ccc, 0x12bec333,
};
//group3
static const int costab12_3[18]={
0x0d413ccc, 0xd92387f1, 0x3dd1ba8e, 0xaf6f823f, 0x5dd1ba8e, 0x9b51cd63,
0x6d413ccc, 0x2d413ccc, 0xd2bec334, 0x92bec334, 0x92bec334, 0xd2bec334,
0x0d413ccc, 0xf99b3b43, 0xef6f823f, 0xfdd1ba8f, 0x0f6f823e, 0x0a2bb903,
};

/* PHASE1.1
 * update costab36_0,1,2,3
 * MAX costab36_0[88]=0.991445, 0x7ee7aa4b
 * MIN costab36_0[89]=-0.999048, 0x801f3019
 * different entries: 32
 * MAX costab36_1[45]=0.991445, 0x7ee7aa4b
 * MIN costab36_1[20]=-0.999048, 0x801f3019
 * different entries: 30
 * MAX costab36_2[12]=0.999048, 0x7fe0cfe7
 * MIN costab36_2[41]=-0.999048, 0x801f3019
 * different entries: 35
 * MAX costab36_3[42]=0.999048, 0x7fe0cfe7
 * MIN costab36_3[11]=-0.999048, 0x801f3019
 * different entries: 30
 */

static const int costab36_0[90]={
0x5679bd6b, 0x9a7365d3, 0xbb39c435, 0x7189922b, 0x30fbc54d, 0x85ec9a5c,
0xe44bb4ed, 0x7ee7aa4b, 0x059551f1, 0x801f3019, 0x10b5150f, 0x7cf7447e,
0xd98278ed, 0x89be50c4, 0x3b1a941c, 0x6bf4403a, 0xb2141b02, 0xa1a0e570,
0x30fbc54d, 0x89be50c4, 0x7641af3c, 0xcf043ab3, 0xcf043ab3, 0x7641af3c,
0x89be50c4, 0x30fbc54d, 0x30fbc54d, 0x89be50c4, 0x7641af3c, 0xcf043ab3,
0xcf043ab3, 0x7641af3c, 0x89be50c4, 0x30fbc54d, 0x30fbc54d, 0x89be50c4,
0xa1a0e570, 0x4debe4fe, 0x6bf4403a, 0xc4e56be4, 0x89be50c4, 0x267d8713,
0x7cf7447e, 0xef4aeaf1, 0x801f3019, 0xfa6aae0f, 0x7ee7aa4b, 0x1bb44b13,
0x85ec9a5c, 0xcf043ab3, 0x7189922b, 0x44c63bcb, 0x9a7365d3, 0xa9864295,
0x89be50c4, 0xcf043ab3, 0x30fbc54d, 0x7641af3c, 0x7641af3c, 0x30fbc54d,
0xcf043ab3, 0x89be50c4, 0x89be50c4, 0xcf043ab3, 0x30fbc54d, 0x7641af3c,
0x7641af3c, 0x30fbc54d, 0xcf043ab3, 0x89be50c4, 0x89be50c4, 0xcf043ab3,
0x059551f1, 0xef4aeaf1, 0x1bb44b13, 0xd98278ed, 0x30fbc54d, 0xc4e56be4,
0x44c63bcb, 0xb2141b02, 0x5679bd6b, 0xa1a0e570, 0x658c9a2d, 0x940bbfc6,
0x7189922b, 0x89be50c4, 0x7a1365a4, 0x8308bb82, 0x7ee7aa4b, 0x801f3019,
};

static const int costab36_1[72]={
0xb2141b02, 0x7641af3c, 0x10b5150f, 0x811855b5, 0x30fbc54d, 0x658c9a2d,
0x9a7365d3, 0xcf043ab3, 0x7ee7aa4b, 0xef4aeaf1, 0x89be50c4, 0x4debe4fe,
0x4debe4fe, 0x89be50c4, 0xef4aeaf1, 0x7ee7aa4b, 0xcf043ab3, 0x9a7365d3,
0xd98278ed, 0x658c9a2d, 0x801f3019, 0x6bf4403a, 0xcf043ab3, 0xe44bb4ed,
0x5e5f1a90, 0x811855b5, 0x7189922b, 0xc4e56be4, 0xef4aeaf1, 0x5679bd6b,
0x8308bb82, 0x7641af3c, 0xbb39c435, 0xfa6aae0f, 0x4debe4fe, 0x85ec9a5c,
0x658c9a2d, 0xcf043ab3, 0x811855b5, 0xef4aeaf1, 0x7641af3c, 0x4debe4fe,
0xb2141b02, 0x89be50c4, 0x10b5150f, 0x7ee7aa4b, 0x30fbc54d, 0x9a7365d3,
0x9a7365d3, 0x30fbc54d, 0x7ee7aa4b, 0x10b5150f, 0x89be50c4, 0xb2141b02,
0x7a1365a4, 0x4debe4fe, 0x059551f1, 0xbb39c435, 0x89be50c4, 0x8308bb82,
0xa9864295, 0xef4aeaf1, 0x3b1a941c, 0x7189922b, 0x7ee7aa4b, 0x5e5f1a90,
0x1bb44b13, 0xcf043ab3, 0x940bbfc6, 0x801f3019, 0x9a7365d3, 0xd98278ed,
};

static const int costab36_2[90]={
0x44c63bcb, 0x811855b5, 0x267d8713, 0x5e5f1a90, 0x89be50c4, 0x059551f1,
0x7189922b, 0x9a7365d3, 0xe44bb4ed, 0x7cf7447e, 0xb2141b02, 0xc4e56be4,
0x7fe0cfe7, 0xcf043ab3, 0xa9864295, 0x7a1365a4, 0xef4aeaf1, 0x940bbfc6,
0x1bb44b13, 0xb2141b02, 0x7189922b, 0x801f3019, 0x7641af3c, 0xa9864295,
0x267d8713, 0x10b5150f, 0xbb39c435, 0x6bf4403a, 0x811855b5, 0x7a1365a4,
0xa1a0e570, 0x30fbc54d, 0x059551f1, 0xc4e56be4, 0x658c9a2d, 0x8308bb82,
0x940bbfc6, 0x10b5150f, 0x7a1365a4, 0x5679bd6b, 0xcf043ab3, 0x801f3019,
0xc4e56be4, 0x4debe4fe, 0x7cf7447e, 0x1bb44b13, 0x9a7365d3, 0x8e766dd5,
0x059551f1, 0x7641af3c, 0x5e5f1a90, 0xd98278ed, 0x811855b5, 0xbb39c435,
0x8308bb82, 0x9a7365d3, 0xc4e56be4, 0xfa6aae0f, 0x30fbc54d, 0x5e5f1a90,
0x7a1365a4, 0x7ee7aa4b, 0x6bf4403a, 0x44c63bcb, 0x10b5150f, 0xd98278ed,
0xa9864295, 0x89be50c4, 0x801f3019, 0x8e766dd5, 0xb2141b02, 0xe44bb4ed,
0x801f3019, 0x811855b5, 0x8308bb82, 0x85ec9a5c, 0x89be50c4, 0x8e766dd5,
0x940bbfc6, 0x9a7365d3, 0xa1a0e570, 0xa9864295, 0xb2141b02, 0xbb39c435,
0xc4e56be4, 0xcf043ab3, 0xd98278ed, 0xe44bb4ed, 0xef4aeaf1, 0xfa6aae0f,
};

static const int costab36_3[72]={
0xc4e56be4, 0x7ee7aa4b, 0xa9864295, 0xe44bb4ed, 0x7641af3c, 0x940bbfc6,
0x059551f1, 0x658c9a2d, 0x85ec9a5c, 0x267d8713, 0x4debe4fe, 0x801f3019,
0x44c63bcb, 0x30fbc54d, 0x8308bb82, 0x5e5f1a90, 0x10b5150f, 0x8e766dd5,
0xef4aeaf1, 0x30fbc54d, 0xb2141b02, 0x658c9a2d, 0x89be50c4, 0x7ee7aa4b,
0x811855b5, 0x7641af3c, 0x9a7365d3, 0x4debe4fe, 0xcf043ab3, 0x10b5150f,
0x10b5150f, 0xcf043ab3, 0x4debe4fe, 0x9a7365d3, 0x7641af3c, 0x811855b5,
0x7189922b, 0x10b5150f, 0xa1a0e570, 0x8308bb82, 0xcf043ab3, 0x44c63bcb,
0x7fe0cfe7, 0x4debe4fe, 0xd98278ed, 0x85ec9a5c, 0x9a7365d3, 0x059551f1,
0x6bf4403a, 0x7641af3c, 0x1bb44b13, 0xa9864295, 0x811855b5, 0xc4e56be4,
0x7ee7aa4b, 0x7641af3c, 0x658c9a2d, 0x4debe4fe, 0x30fbc54d, 0x10b5150f,
0xef4aeaf1, 0xcf043ab3, 0xb2141b02, 0x9a7365d3, 0x89be50c4, 0x811855b5,
0x811855b5, 0x89be50c4, 0x9a7365d3, 0xb2141b02, 0xcf043ab3, 0xef4aeaf1,
};

#endif // __IMDCT_TAB_H__

