#ifndef ITP_STDIO_H
#define ITP_STDIO_H

#ifdef CFG_WIN32_FS_HW
    #define _STDIO_DEFINED
#endif

#include <sys/types.h>
#include "$ENV{CFG_VC_INC_PATH}/stdio.h"

#ifdef __cplusplus
extern "C"
{
#endif

#ifdef snprintf
    #undef snprintf
#endif
#define snprintf _snprintf
#ifdef fseeko
    #undef fseeko
#endif
#define fseeko   fseek
int vasprintf(char **sptr, char *fmt, va_list argv);
int asprintf(char **sptr, char *fmt, ...);
ssize_t getline(char **bufptr, size_t *n, FILE *fp);
FILE *popen(const char *command, const char *type);
int pclose(FILE *stream);

#ifdef CFG_WIN32_FS_HW

_CRTIMP FILE * __cdecl __iob_func(void);
_Check_return_opt_ _CRTIMP int __cdecl printf(_In_z_ _Printf_format_string_ const char *_Format, ...);
_Check_return_opt_ _CRTIMP int __cdecl putchar(_In_ int _Ch);
_Check_return_opt_ _CRTIMP int __cdecl puts(_In_z_ const char *_Str);
__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_ARGLIST(int, __RETURN_POLICY_SAME, _CRTIMP, sprintf, vsprintf, _Pre_notnull_ _Post_z_, char, _Dest, _In_z_ _Printf_format_string_ const char *, _Format)
_Check_return_opt_ _CRT_INSECURE_DEPRECATE(vsnprintf_s) _CRTIMP int __cdecl vsnprintf(_Out_cap_(_MaxCount) char *_DstBuf, _In_ size_t _MaxCount, _In_z_ _Printf_format_string_ const char *_Format, va_list _ArgList);
_Check_return_opt_ _CRTIMP int __cdecl fprintf(_Inout_ FILE *_File, _In_z_ _Printf_format_string_ const char *_Format, ...);
_Check_return_ _CRTIMP int __cdecl ferror(_In_ FILE *_File);
__DEFINE_CPP_OVERLOAD_STANDARD_NFUNC_0_2_ARGLIST_EX(int, __RETURN_POLICY_SAME, _CRTIMP, _snprintf, _vsnprintf, _Pre_notnull_ _Post_maybez_ char, _Out_cap_(_Count) _Post_maybez_, char, _Dest, _In_ size_t, _Count, _In_z_ _Printf_format_string_ const char *, _Format)

void    *fopen(const char *name, const char *mode);
int     fclose(void *fp);
size_t  fread(void *ptr, size_t size, size_t count, void *fp);
size_t  fwrite(const void *ptr, size_t size, size_t count, void *fp);
int     fseek(void *fp, long offset, int whence);
long    ftell(void *fp);
int     fflush(void *fp);
off_t   ftello(FILE *fp);

#endif // CFG_WIN32_FS_HW

#ifdef __cplusplus
}
#endif

#endif // ITP_STDIO_H